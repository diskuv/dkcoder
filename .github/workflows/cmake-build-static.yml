##########################################################################
# File: dkcoder\.github\workflows\cmake-build-static.yml                 #
#                                                                        #
# Copyright 2024 Diskuv, Inc.                                            #
#                                                                        #
# Licensed under the Open Software License version 3.0                   #
# (the "License"); you may not use this file except in compliance        #
# with the License. You may obtain a copy of the License at              #
#                                                                        #
#     https://opensource.org/license/osl-3-0-php/                        #
#                                                                        #
##########################################################################

name: Publish CMake as a tarball with static binaries

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
            - platform: linux/amd64
              dkml_target_abi: linux_x86_64
              testable: true
            - platform: linux/arm64
              dkml_target_abi: linux_arm64
              #     Can't run arm64 on Intel machines without an emulator
              testable: false
            - platform: linux/386
              dkml_target_abi: linux_x86
              testable: true

    name: ${{ matrix.dkml_target_abi }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # We aren't use cross-compilation. Instead we have multiple platforms
      # with QEMU emulation providing a native environment. An alternative
      # is to use CMake to build Ninja with a cross-compiler.
      - name: Build ${{ matrix.platform }} and export to filesystem
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          file: ci/cmake-build-static/Dockerfile
          outputs: type=local,dest=out

      - name: Display binary format
        run: file out/usr/local/cmake/bin/cmake

      - name: Test binary outside container
        if: matrix.testable
        run: out/usr/local/cmake/bin/cmake --version

      - name: Bundle cmake-${{ matrix.dkml_target_abi }}.tar.gz
        run: X=$(pwd) && cd out/usr/local/cmake && tar cfz $X/cmake-${{ matrix.dkml_target_abi }}.tar.gz *

      - name: Upload cmake tarball
        uses: actions/upload-artifact@v4
        with:
          retention-days: 30
          name: cmake-${{ matrix.dkml_target_abi }}
          path: cmake-${{ matrix.dkml_target_abi }}.tar.gz

  publish:
    permissions:
        contents: write
    runs-on: ubuntu-latest
    needs: build
    # We never want the DkCoder version numbers to conflict with the CMake releases.
    # So use tags that are real CMake versions. Example: cmake-3.25.2
    if: startsWith(github.ref, 'refs/tags/cmake-')
    steps:
      - name: Download CMake archives
        uses: actions/download-artifact@v4
        with:
            pattern: cmake-*
            merge-multiple: true
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            cmake-linux_x86_64.tar.gz
            cmake-linux_x86.tar.gz
            cmake-linux_arm64.tar.gz
